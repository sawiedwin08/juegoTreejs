import bpy
import os
import json
from mathutils import Vector

# -------- Configuraciones --------
nivel = 2  # ðŸ”µ Puedes cambiar a 2, 3, etc. para otros niveles

# Rutas de exportaciÃ³n
export_path = r"D:/UCC/React/PortafolioUCC/Project_v3_multiplayer_final/game-project/public/models/toycar2"
json_path = os.path.join(export_path, "toy_car_blocks1.json")
os.makedirs(export_path, exist_ok=True)

positions = []

# ConfiguraciÃ³n de Blender
depsgraph = bpy.context.evaluated_depsgraph_get()
bpy.ops.object.mode_set(mode='OBJECT')
bpy.context.view_layer.update()

# -------- Recorrer objetos seleccionados --------
for obj in bpy.context.selected_objects:
    if obj.type != 'MESH':
        continue

    obj_eval = obj.evaluated_get(depsgraph)
    matrix_world = obj_eval.matrix_world
    loc = matrix_world.to_translation()

    # ðŸ”µ Normalizar el nombre
    name = obj.name.lower().replace(" ", "_").replace(f"_lev{nivel}", "")

    # ðŸ”µ Asignar nuevo nombre con nivel
    name_with_level = f"{name}_lev{nivel}"
    obj.name = name_with_level

    # ðŸ”µ ConversiÃ³n de coordenadas para Three.js
    pos = {
        "name": obj.name,       # Nombre ya corregido
        "x": loc.x,              # X real
        "y": loc.z,              # Z de Blender pasa a Y en Three.js
        "z": -loc.y,             # Invertir Y de Blender para ser Z en Three.js
        "level": nivel
    }

    positions.append(pos)
    print(f"ðŸ“¦ {obj.name}: ({pos['x']}, {pos['y']}, {pos['z']}, nivel {pos['level']})")

    # -------- Exportar modelo individual --------
    bpy.ops.object.select_all(action='DESELECT')
    obj.select_set(True)
    bpy.context.view_layer.objects.active = obj

    filepath = os.path.join(export_path, f"{obj.name}.glb")
    bpy.ops.export_scene.gltf(
        filepath=filepath,
        use_selection=True,
        export_format='GLB',
        export_apply=False
    )

# -------- Guardar archivo JSON --------
with open(json_path, "w") as f:
    json.dump(positions, f, indent=4)

print("âœ… ExportaciÃ³n finalizada con sistema de coordenadas compatible con Three.js.")
